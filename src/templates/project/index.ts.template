/**
 * MCP Server entry point
 */
import { Server } from '@modelcontextprotocol/sdk/server/index.js';
import { StdioServerTransport } from '@modelcontextprotocol/sdk/server/stdio.js';
import { setupRequestHandlers } from './server/toolHandler.js';
import { setupPromptHandlers } from './server/promptHandler.js';
import { setupResourceHandlers } from './server/resourceHandler.js';

// Configure the server
const serverConfig = {
  {{#if http}}
  transport: {
    type: "http-stream",
    options: {
      port: {{port}}{{#if cors}},
      cors: {
        allowOrigin: "*"
      }{{/if}}
    }
  }
  {{/if}}
};

// Initialize the server
async function startServer() {
  try {
    console.log('Starting {{name}} MCP server...');
    
        // Create the server instance
    const server = new Server(
      {
        name: '{{name}}',
        version: '0.1.0',
        description: '{{name}} MCP server',
      },
      serverConfig
    );
    
    // Set up request handlers
    setupRequestHandlers(server);
    setupPromptHandlers(server);
    setupResourceHandlers(server);
    
    // Create a transport
    const transport = new StdioServerTransport();
    
    // Connect the server to the transport
    await server.connect(transport);
    
    console.log('{{name}} MCP server started successfully');
  } catch (error) {
    console.error('Failed to start server:', error);
    process.exit(1);
  }
}

// Start the server
startServer();